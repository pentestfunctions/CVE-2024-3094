#!/usr/bin/env bash
# Credits to https://jfrog.com/blog/xz-backdoor-attack-cve-2024-3094-all-you-need-to-know/
# Had to remove the horrible ascii art.

RED='\033[1;31m'
GREEN='\033[1;32m'
NC='\033[0m'

malicious_xz=0

# 1. Check XZ version
if [ -f /etc/alpine-release ]; then
	# Running on Alpine - vulnerable versions are knowns: 5.6.1-r0 and 5.6.1-r1
    xz_version=$(apk info --installed -v xz) 
    if [[ "$xz_version" =~ ^xz-5\.6\.1-r[0-1]$ ]]; then
        malicious_xz=1
    fi

elif [ -f /etc/arch-release ]; then
    # Running on Arch - vulnerable versions are knowns: 5.6.0-1 and 5.6.1-1
    xz_version=$(pacman -Q xz | sed 's/^xz //')
    if [[ "$xz_version" =~ ^5\.6\.[0-1]-1$ ]]; then
        malicious_xz=1
    fi

else
    # Running on other Linux - Check if xz version is >= 5.5.0
    xz_version=$(strings "$(which xz)" | awk '/xz \(XZ Utils/ {print $4}')
    if awk -vv="$xz_version" 'BEGIN {split(v,a,"."); if (a[1]>=5 && a[2]>=5) exit 0; else exit 1}'; then
	malicious_xz=1
    fi
fi
    
# 2. Check if sshd binary is present
sshd_path=$(which sshd)
if [ -z "$sshd_path" ]; then
    sshd_found=0
else
    sshd_found=1
fi

# 3. Check if sshd is using lzma
lzma_used=$(ldd "$sshd_path" 2>/dev/null | grep -q 'lzma'; echo $?)
if [ "$lzma_used" -eq 0 ]; then
    lzma_path=$(ldd "$sshd_path" 2>/dev/null | grep 'lzma' | awk '{print $3}')
    lzma_found=1
else
    lzma_found=0
fi

# 4. Check for the specific byte pattern in lzma
if [ "$lzma_found" -eq 1 ]; then
    byte_pattern=$(hexdump -ve '1/1 "%.2x"' "$lzma_path" | grep -q 'f30f1efa554889f54c89ce5389fb81e7000000804883ec28488954241848894c2410'; echo $?)
    if [ "$byte_pattern" -eq 0 ]; then
        byte_pattern_found=1
    else
        byte_pattern_found=0
    fi
else
    byte_pattern_found=0
fi

# Output results
echo -ne "XZ vulnerable version: "  
if [ "$malicious_xz" -eq 1 ]; then
    echo -e "${RED}YES${NC} ($xz_version)"
else
    echo -e "${GREEN}NO${NC} ($xz_version)"
fi

echo -ne "LZMA vulnerable version: " 
if [ "$byte_pattern_found" -eq 1 ]; then
    echo -e "${RED}YES${NC} (byte pattern found)"
else
    echo -e "${GREEN}NO${NC}"
fi

echo -ne "SSHD found in the system: "
if [ "$sshd_found" -eq 1 ]; then
    echo -e "${RED}YES${NC} ($sshd_path)"
else
    echo -e "${GREEN}NO${NC}"
fi

echo -ne "SSHD linked with LZMA: "
if [ "$lzma_found" -eq 1 ]; then
    echo -e "${RED}YES${NC} ($lzma_path)"
else
    echo -e "${GREEN}NO${NC}"
fi

# Output conclusion
echo
if [ "$malicious_xz" -eq 1 ] || [ "$byte_pattern_found" -eq 1 ]; then
	echo -e "${RED}- Malicious XZ/LZMA found: YES ${NC}" 
    affected=1
else
	echo -e "${GREEN}- Malicious XZ/LZMA found: NO ${NC}"
	affected=0
fi

if [ "$lzma_found" -eq 1 ]; then
    echo -e "${RED}- Vulnerable SSHD found: YES (SSHD linked with LZMA) ${NC}"
    vulnerable=1
else
    if [ "$sshd_found" -eq 0 ]; then
         echo -e "${GREEN}- Vulnerable SSHD found: NO (SSHD not found) ${NC}"
    else 
         echo -e "${GREEN}- Vulnerable SSHD found: NO (SSHD does not link with LZMA) ${NC}"
    fi
    vulnerable=0
fi

if [ "$vulnerable" -eq 1 ] && [ "$affected" -eq 1 ]; then
    echo -e "Conclusion: ${RED}LIKELY TO BE VULNERABLE TO CVE-2024-3094 ${NC}"
else
    echo -e "Conclusion: ${GREEN}NOT VULNERABLE TO CVE-2024-3094 ${NC}"
fi

echo
